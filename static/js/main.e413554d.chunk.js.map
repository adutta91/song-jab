{"version":3,"sources":["components/Card/index.js","components/Button/index.js","components/VenueProfile/index.js","app/resources.js","components/ConcertCard/index.js","components/ConcertProfile/index.js","components/ArtistCard/index.js","components/ArtistProfile/index.js","components/VenueCard/index.js","components/Header/index.js","components/Footer/index.js","components/Spinner/index.js","components/Pagination/controls.js","components/Pagination/index.js","components/List/index.js","components/Profile/index.js","components/PageContents/index.js","components/App/index.js","actions/index.js","serviceWorker.js","styles/variables.js","reducers/index.js","reducers/data-reducer.js","reducers/view-reducer.js","store.js","index.js","theme-provider.js"],"names":["StyledCard","styled","section","theme","variables","fontColorPrimary","Card","children","StyledButton","button","Button","props","VenueProfile","concerts","title","slug","apiUrl","cardComponent","name","moment","event_date_time","format","ticket_status","onClick","window","location","ticket_links","url","profileComponent","artists","console","log","venues","StyledHeader","header","withRouter","connect","state","tabs","selected","match","params","view","dispatch","map","tab","key","to","className","classnames","active","StyledFooter","footer","Footer","href","target","rel","StyledSpinner","Spinner","Controls","classNames","currPage","totalPages","onChange","pageChange","page","delta","parseInt","newPage","disabled","e","id","currentTarget","value","options","i","push","getOptions","WithPagination","initialState","pages","getPages","displayItems","pageSize","chunk","setState","prev","controls","length","render","controlsPos","prevProps","this","Component","defaultProps","StyledList","ul","data","dataReducer","loading","viewReducer","dataReceived","resources","CardComponent","Pagination","datum","StyledProfile","item","find","ProfileComponent","StyledPageContents","path","component","Profile","List","StyledApp","type","setLoading","val","useEffect","Promise","all","resource","a","async","get","response","status","then","results","forEach","result","Boolean","hostname","backgroundColor","boxShadowColor","borderColor","borderRadius","fontColorPrimaryLight","fontColorSecondary","linkColor","fontSizePrimary","fontSizeSecondary","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","appReducer","applyMiddleware","thunk","app","store","App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wqBAGA,IAAMA,EAAaC,IAAOC,QAAV,KAeL,qBAAGC,MAAkBC,UAAUC,oBAO3BC,MAJf,YAA6B,IAAbC,EAAY,EAAZA,SACd,OAAO,kBAACP,EAAD,KAAaO,I,0TCnBtB,IAAMC,EAAeP,IAAOQ,OAAV,KAiBHC,MAJf,YAAyC,IAAvBH,EAAsB,EAAtBA,SAAaI,EAAS,4BACtC,OAAO,kBAACH,EAAiBG,EAAQJ,ICXpBK,ICEA,GACbC,SAAU,CACRC,MAAO,WACPC,KAAM,WACNC,OAAQ,qDACRC,cCRJ,SAAqBN,GACnB,OACE,kBAAC,EAAD,KACE,4BAAKA,EAAMO,MACX,2BAAIC,IAAOR,EAAMS,iBAAiBC,OAAO,wBACzC,2BAC2B,cAAxBV,EAAMW,cACL,kBAAC,EAAD,CAAQC,QAAS,kBAAOC,OAAOC,SAAWd,EAAMe,aAAa,GAAGC,MAAhE,eAIA,yBDFNC,iBEZJ,SAAwBjB,GACtB,OAAO,kDFaPkB,QAAS,CACPf,MAAO,UACPC,KAAM,UACNC,OAAQ,oDACRC,cGjBJ,SAAoBN,GAClB,OAAO,kBAAC,EAAD,KAAOA,EAAMO,OHiBlBU,iBInBJ,SAAuBjB,GAErB,OADAmB,QAAQC,IAAI,wBAAsBpB,GAC3B,iDJmBPqB,OAAQ,CACNlB,MAAO,SACPC,KAAM,SACNC,OAAQ,mDACRC,cKxBJ,SAAmBN,GACjB,OAAO,kBAAC,EAAD,KAAOA,EAAMO,OLwBlBU,iBD1BJ,SAAsBjB,GACpB,OAAO,iD,ujBOKT,IAAMsB,EAAehC,IAAOiC,OAAV,KAQL,qBAAG/B,MAAkBC,UAAUC,oBA2C7B8B,kBACbC,aACE,SAACC,EAAO1B,GAEN,OADAmB,QAAQC,IAAI,wBAAsBpB,GAC3B,CACL2B,KAAM3B,EAAM2B,KACZC,SAAU5B,EAAM6B,MAAMC,OAAOC,SAGjC,SAAAC,GAAQ,MAAK,KARfP,EA1BF,YAAqC,IAAnBE,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SACtB,OACE,kBAACN,EAAD,KACGK,EAAKM,KAAI,SAAAC,GAAG,OACX,kBAAC,IAAD,CACEC,IAAKD,EAAI9B,KACTgC,GAAE,WAAMF,EAAI9B,MACZiC,UAAWC,IAAW,CAAC,CAAEC,OAAQX,IAAaM,EAAI9B,SAEjD8B,EAAI/B,e,kUCxCf,IAAMqC,EAAelD,IAAOmD,OAAV,KA+BHC,MAff,WACE,OACE,kBAACF,EAAD,eACU,IACR,uBACEG,KAAK,8BACLC,OAAO,SACPC,IAAI,uBAHN,W,qECpBN,IAAMC,EAAgBxD,IAAOC,QAAV,KAMJwD,MAJf,WACE,OAAO,kBAACD,EAAD,oB,wCCqEME,EArEE,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACpD,SAASC,EAAWC,EAAMC,GACxB,GAAID,EACF,OAAOF,EAASI,SAASF,IACpB,GAAIC,EAAO,CAChB,IAAIE,EAAUP,EAAWK,EAEzB,GAAIE,GAAW,GAAKA,EAAUN,EAC5B,OAAOC,EAASK,IAoBtB,OAAIN,GAAc,EAAU,KAG1B,yBAAKd,UAAWC,IAAWW,IACzB,kBAAC,EAAD,CAAQS,SAAuB,IAAbR,EAAgBtC,QAAS,SAAA+C,GAAC,OAAIN,EAAW,MAAO,KAChE,uBAAGhB,UAAU,yBAGf,yBAAKA,UAAU,gBACb,4BACE9B,KAAK,WACLqD,GAAG,WACHR,SAAU,SAAAO,GAAC,OAAIN,EAAWM,EAAEE,cAAcC,QAC1CA,MAAOZ,GA5Bf,WAGE,IAFA,IAAIa,EAAU,GAELC,EAAI,EAAGA,EAAIb,EAAYa,IAC9BD,EAAQE,KACN,4BAAQH,MAAOE,EAAG7B,IAAK6B,GACpBA,EAAI,IAKX,OAAOD,EAmBAG,IAEH,mCAASf,IAGX,kBAAC,EAAD,CACEO,SAAUR,IAAaC,EAAa,EACpCvC,QAAS,SAAA+C,GAAC,OAAIN,EAAW,KAAM,KAE/B,uBAAGhB,UAAU,4BCpDf8B,E,YACJ,WAAYnE,GAAQ,IAAD,8BACjB,4CAAMA,KAWRoE,aAAe,SAAApE,GACb,IAAMqE,EAAQ,EAAKC,SAAStE,GAE5B,MAAO,CACLqE,QACAE,aAAcF,EAAM,IAAM,GAC1BnB,SAAU,IAlBK,EAsBnBoB,SAAW,YAA4B,IAAzBP,EAAwB,EAAxBA,QAASS,EAAe,EAAfA,SACrB,OAAOC,gBAAMV,EAASS,IAvBL,EA0BnBnB,WAAa,SAAAI,GACX,EAAKiB,UAAS,SAAAC,GAAI,MAAK,CACrBzB,SAAUO,EACVc,aAAcI,EAAKN,MAAMZ,QA7BV,EAiCnBmB,SAAW,WACT,OAAK,EAAKlD,MAAM2C,MAAMQ,OAKpB,kBAAC,EAAD,CACE3B,SAAU,EAAKxB,MAAMwB,SACrBC,WAAY,EAAKzB,MAAM2C,MAAMQ,OAC7BzB,SAAU,EAAKC,aAPV,MAnCQ,EA+CnByB,OAAS,kBACP,kBAAC,WAAD,KAC8B,QAA3B,EAAK9E,MAAM+E,YAAwB,EAAKH,WAAa,KAErD,EAAK5E,MAAMJ,SAAS,CACnB2E,aAAc,EAAK7C,MAAM6C,eAEC,WAA3B,EAAKvE,MAAM+E,YAA2B,EAAKH,WAAa,OAnD3D,EAAKlD,MAAQ,EAAK0C,aAAapE,GAHd,E,gFAMAgF,GACbC,KAAKjF,MAAM+D,UAAYiB,EAAUjB,SACnCkB,KAAKP,SAASO,KAAKb,aAAaa,KAAKjF,Y,GATdkF,aAkE7Bf,EAAegB,aAAe,CAC5BJ,YAAa,SACbP,SAAU,IAGGL,Q,uNCpEf,IAAMiB,EAAa9F,IAAO+F,GAAV,KAsDD5D,mBAAQ,SAACC,EAAO1B,GAAR,MAAmB,CACxC4B,SAAU5B,EAAM6B,MAAMC,OAAOC,KAC7BuD,KAAM5D,EAAM6D,YACZC,QAAS9D,EAAM+D,YAAYD,WAHd/D,EA5Cf,YAA0D,IAA1C+D,EAAyC,EAAzCA,QAAS5D,EAAgC,EAAhCA,SAAU0D,EAAsB,EAAtBA,KACjC,GADuD,EAAhBI,aACnCF,EACF,OACE,kBAACJ,EAAD,KACE,kBAAC,EAAD,OAKN,IAAKxD,IAAa+D,EAAU/D,GAC1B,OACE,kBAACwD,EAAD,KACE,wCACA,iEAKN,IAAMQ,EAAgBD,EAAU/D,GAAUtB,cAE1C,OACE,kBAAC8E,EAAD,KACE,kBAACS,EAAD,CAAY9B,QAASuB,EAAK1D,GAAWmD,YAAY,SAASP,SAAU,KACjE,qBAAGD,aACWtC,KAAI,SAAA6D,GAAK,OACpB,kBAAC,IAAD,CACE3D,IAAK2D,EAAMlC,GACXxB,GAAE,WAAMR,EAAN,YAAkB+D,EAAU/D,GAAUxB,OAExC,kBAACwF,EAAkBE,c,4HCxCjC,IAAMC,EAAgBzG,IAAO+F,GAAV,KAwBJ7D,kBACbC,aAAQ,SAACC,EAAO1B,GAAR,MAAmB,CACzB+B,KAAM/B,EAAM6B,MAAMC,OAAOC,KACzB6B,GAAI5D,EAAM6B,MAAMC,OAAO8B,GACvB0B,KAAM5D,EAAM6D,eAHd9D,EAnBF,YAAsC,IAAnB6D,EAAkB,EAAlBA,KAAMvD,EAAY,EAAZA,KAAM6B,EAAM,EAANA,GACvBoC,EAAOC,eAAKX,EAAKvD,IAAO,SAAA+D,GAAK,OAAIA,EAAMlC,KAAOA,KAE9CsC,EAAmBP,EAAU5D,GAAMd,iBAEzC,OACE,kBAAC8E,EAAD,KACE,kBAACG,EAAqBF,Q,yHCb5B,IAAMG,EAAqB7G,IAAOC,QAAV,KAgBTiC,kBACbC,aAAQ,SAACC,EAAO1B,GAAR,MAAmB,CACzB+B,KAAM/B,EAAM6B,MAAMC,OAAOC,QAD3BN,EAZF,SAAsBzB,GACpB,OACE,kBAACmG,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,aAAaC,UAAWC,IACpC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWE,U,uECLzC,IAAMC,GAAYlH,IAAOC,QAAV,MAmCAkC,oBACb,SAAAC,GAAK,MAAK,MACV,SAAAM,GAAQ,MAAK,CACX0D,aAAc,SAACJ,EAAMlF,GAAP,OAAgB4B,ECnDN,SAACsD,EAAMlF,GAAP,MAAiB,CAC3CqG,KAAK,gBACLrG,OACAkF,QDgDyCI,CAAaJ,EAAMlF,KAC1DsG,WAAY,SAAAC,GAAG,OAAI3E,EC9CG,SAAA2E,GAAG,MAAK,CAChCF,KAAK,cACLE,OD4C8BD,CAAWC,QAJ5BlF,EAjCf,YAA4C,IAA7BiE,EAA4B,EAA5BA,aAAcgB,EAAc,EAAdA,WAiB3B,OAhBAE,qBAAU,WACRF,GAAW,GAEXG,QAAQC,IACN7E,cAAI0D,GAAW,SAAMoB,GAAN,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACUE,cAAIH,EAAS1G,SADvB,UAEW,OADlB8G,EADO,QAEAC,SAAkBD,EAAS7B,KAF3B,yCAGJ,CAAEA,KAAM6B,EAAS7B,KAAMlF,KAAM2G,EAAS3G,OAHlC,yCAMfiH,MAAK,SAAAC,GACLA,EAAQC,SAAQ,SAAAC,GAAM,OAAI9B,EAAa8B,EAAOlC,KAAMkC,EAAOpH,SAC3DsG,GAAW,QAEZ,CAAChB,EAAcgB,IAGhB,kBAACF,GAAD,KACE,kBAAC,EAAD,CAAQ7E,KAAMM,cAAI0D,GAAW,kBAAsB,CAAExF,MAAxB,EAAGA,MAA4BC,KAA/B,EAAUA,WAEvC,kBAAC,EAAD,MAEA,kBAAC,EAAD,UE1BcqH,QACW,cAA7B5G,OAAOC,SAAS4G,UAEe,UAA7B7G,OAAOC,SAAS4G,UAEhB7G,OAAOC,SAAS4G,SAAS7F,MACvB,2DClBS,QAEb8F,gBAAiB,UAGjBC,eAAgB,qBAChBC,YAAa,UACbC,aAAc,MAGdpI,iBAAkB,UAClBqI,sBAAuB,UACvBC,mBAAoB,UACpBC,UAAW,UAGXC,gBAAiB,OACjBC,kBAAmB,Q,oCCXNC,gBAAgB,CAC7B7C,YCDa,WAAqC,IAApC7D,EAAmC,uDANvB,CAC1BR,QAAS,GACThB,SAAU,GACVmB,OAAQ,IAG8BgH,EAAW,uCACjD,OAAQA,EAAO5B,MACb,IAAK,gBACH,OAAO,gBAAK/E,EAAZ,gBAAoB2G,EAAOjI,KAAOiI,EAAO/C,OAC3C,QACE,OAAO5D,IDHX+D,YEJa,WAAqC,IAApC/D,EAAmC,uDAJvB,CAC1B8D,SAAS,GAG6B6C,EAAW,uCACjD,OAAQA,EAAO5B,MACb,IAAK,cACH,OAAO,gBAAK/E,EAAZ,CAAmB8D,QAAS6C,EAAO1B,MACrC,QACE,OAAOjF,MCHP4G,GAAmBzH,OAAO0H,sCAAwCC,KAEzDC,gBACbC,GACAJ,GAAiBK,aAAgBC,QCC7BC,GACJ,mBCRa,SAAA7I,GAAK,OAClB,kBAAC,IAAD,CAAeR,MAAO,CAAEC,eAAcO,EAAMJ,YDO5C,KACE,kBAAC,IAAD,CAAUkJ,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO1C,KAAK,UAAUC,UAAW0C,SAO3CC,IAASlE,OAAO+D,GAAKI,SAASC,eAAe,SN4GvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhC,MAAK,SAAAiC,GACjCA,EAAaC,kB","file":"static/js/main.e413554d.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledCard = styled.section`\n  transition: all 0.1s ease-out;\n  border-radius: 5px;\n  box-shadow: 0px 0px 2px 2px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n  width: 400px;\n  margin-bottom: 20px;\n  background: white;\n  margin: 20px;\n\n  &:hover {\n    box-shadow: 0px 0px 5px 5px rgba(0, 0, 0, 0.1);\n  }\n\n  text-decoration: none;\n  color: ${({ theme }) => theme.variables.fontColorPrimary};\n`;\n\nfunction Card({ children }) {\n  return <StyledCard>{children}</StyledCard>;\n}\n\nexport default Card;\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.button`\r\n  text-decoration: none;\r\n  background: blue;\r\n  color: white;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  text-transform: uppercase;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-size: 16px;\r\n  box-shadow: none;\r\n  border: none;\r\n`;\r\n\r\nfunction Button({ children, ...props }) {\r\n  return <StyledButton {...props}>{children}</StyledButton>;\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nfunction VenueProfile(props) {\r\n  return <div>Venue profile</div>;\r\n}\r\n\r\nexport default VenueProfile;\r\n","import ConcertCard from \"../components/ConcertCard\";\r\nimport ArtistCard from \"../components/ArtistCard\";\r\nimport VenueCard from \"../components/VenueCard\";\r\n\r\nimport ConcertProfile from \"../components/ConcertProfile\";\r\nimport ArtistProfile from \"../components/ArtistProfile\";\r\nimport VenueProfile from \"../components/VenueProfile\";\r\n\r\nexport default {\r\n  concerts: {\r\n    title: \"Concerts\",\r\n    slug: \"concerts\",\r\n    apiUrl: \"https://hl-candidate-events.herokuapp.com/concerts\",\r\n    cardComponent: ConcertCard,\r\n    profileComponent: ConcertProfile\r\n  },\r\n  artists: {\r\n    title: \"Artists\",\r\n    slug: \"artists\",\r\n    apiUrl: \"https://hl-candidate-events.herokuapp.com/artists\",\r\n    cardComponent: ArtistCard,\r\n    profileComponent: ArtistProfile\r\n  },\r\n  venues: {\r\n    title: \"Venues\",\r\n    slug: \"venues\",\r\n    apiUrl: \"https://hl-candidate-events.herokuapp.com/venues\",\r\n    cardComponent: VenueCard,\r\n    profileComponent: VenueProfile\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport Card from \"../Card\";\r\nimport Button from \"../Button\";\r\n\r\nfunction ConcertCard(props) {\r\n  return (\r\n    <Card>\r\n      <h1>{props.name}</h1>\r\n      <p>{moment(props.event_date_time).format(\"MMMM Do, YYYY h:mma\")}</p>\r\n      <p>\r\n        {props.ticket_status === \"available\" ? (\r\n          <Button onClick={() => (window.location = props.ticket_links[0].url)}>\r\n            Buy Tickets\r\n          </Button>\r\n        ) : (\r\n          \"Tickets Unavailable\"\r\n        )}\r\n      </p>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ConcertCard;\r\n","import React from \"react\";\r\n\r\nfunction ConcertProfile(props) {\r\n  return <div>concert profile</div>;\r\n}\r\n\r\nexport default ConcertProfile;\r\n","import React from \"react\";\r\nimport Card from \"../Card\";\r\n\r\nfunction ArtistCard(props) {\r\n  return <Card>{props.name}</Card>;\r\n}\r\n\r\nexport default ArtistCard;\r\n","import React from \"react\";\r\n\r\nfunction ArtistProfile(props) {\r\n  console.log(\"props *****---->>>\", props);\r\n  return <div>artist profile</div>;\r\n}\r\n\r\nexport default ArtistProfile;\r\n","import React from \"react\";\r\nimport Card from \"../Card\";\r\n\r\nfunction VenueCard(props) {\r\n  return <Card>{props.name}</Card>;\r\n}\r\n\r\nexport default VenueCard;\r\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledHeader = styled.header`\n  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.1);\n  display: flex;\n  height: 60px;\n\n  > a {\n    transition: all 0.2s ease-out;\n    text-decoration: none;\n    color: ${({ theme }) => theme.variables.fontColorPrimary};\n    text-transform: uppercase;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    height: 100%;\n    padding: 0 20px;\n\n    &:hover {\n      background: rgba(0, 0, 0, 0.15);\n    }\n\n    &.active {\n      background: rgba(0, 0, 0, 0.1);\n    }\n  }\n`;\n\nfunction Header({ tabs, selected }) {\n  return (\n    <StyledHeader>\n      {tabs.map(tab => (\n        <Link\n          key={tab.slug}\n          to={`/${tab.slug}`}\n          className={classnames([{ active: selected === tab.slug }])}\n        >\n          {tab.title}\n        </Link>\n      ))}\n    </StyledHeader>\n  );\n}\nHeader.propTypes = {\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      slug: PropTypes.string.isRequired\n    })\n  ),\n  selected: PropTypes.string\n};\n\nexport default withRouter(\n  connect(\n    (state, props) => {\n      console.log(\"props *****---->>>\", props);\n      return {\n        tabs: props.tabs,\n        selected: props.match.params.view\n      };\n    },\n    dispatch => ({})\n  )(Header)\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledFooter = styled.footer`\n  height: 60px;\n  position: fixed;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: -1px -1px 1px 1px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  background: white;\n\n  > a {\n    margin-left: 5px;\n  }\n`;\n\nfunction Footer() {\n  return (\n    <StyledFooter>\n      made by{\" \"}\n      <a\n        href=\"https://github.com/adutta91\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Arjun\n      </a>\n    </StyledFooter>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledSpinner = styled.section``;\r\n\r\nfunction Spinner() {\r\n  return <StyledSpinner>Loading...</StyledSpinner>;\r\n}\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nimport Button from \"../Button\";\r\n\r\nconst Controls = ({ classNames, currPage, totalPages, onChange }) => {\r\n  function pageChange(page, delta) {\r\n    if (page) {\r\n      return onChange(parseInt(page));\r\n    } else if (delta) {\r\n      let newPage = currPage + delta;\r\n\r\n      if (newPage >= 0 && newPage < totalPages) {\r\n        return onChange(newPage);\r\n      }\r\n    }\r\n  }\r\n\r\n  function getOptions() {\r\n    let options = [];\r\n\r\n    for (let i = 0; i < totalPages; i++) {\r\n      options.push(\r\n        <option value={i} key={i}>\r\n          {i + 1}\r\n        </option>\r\n      );\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  // don't need pagination controls when there's one or zero pages\r\n  if (totalPages <= 1) return null;\r\n\r\n  return (\r\n    <div className={classnames(classNames)}>\r\n      <Button disabled={currPage === 0} onClick={e => pageChange(null, -1)}>\r\n        <i className=\"fas fa-chevron-left\"></i>\r\n      </Button>\r\n\r\n      <div className=\"page-display\">\r\n        <select\r\n          name=\"currPage\"\r\n          id=\"currPage\"\r\n          onChange={e => pageChange(e.currentTarget.value)}\r\n          value={currPage}\r\n        >\r\n          {getOptions()}\r\n        </select>\r\n        <div>of {totalPages}</div>\r\n      </div>\r\n\r\n      <Button\r\n        disabled={currPage === totalPages - 1}\r\n        onClick={e => pageChange(null, 1)}\r\n      >\r\n        <i className=\"fas fa-chevron-right\"></i>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nControls.propTypes = {\r\n  currPage: PropTypes.number.isRequired,\r\n  totalPages: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  classNames: PropTypes.oneOfType([\r\n    PropTypes.array,\r\n    PropTypes.object,\r\n    PropTypes.string\r\n  ])\r\n};\r\n\r\nexport default Controls;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { chunk } from \"lodash\";\r\n\r\nimport Controls from \"./controls\";\r\n\r\nclass WithPagination extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = this.initialState(props);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.options !== prevProps.options) {\r\n      this.setState(this.initialState(this.props));\r\n    }\r\n  }\r\n\r\n  initialState = props => {\r\n    const pages = this.getPages(props);\r\n\r\n    return {\r\n      pages,\r\n      displayItems: pages[0] || [],\r\n      currPage: 0\r\n    };\r\n  };\r\n\r\n  getPages = ({ options, pageSize }) => {\r\n    return chunk(options, pageSize);\r\n  };\r\n\r\n  pageChange = newPage => {\r\n    this.setState(prev => ({\r\n      currPage: newPage,\r\n      displayItems: prev.pages[newPage]\r\n    }));\r\n  };\r\n\r\n  controls = () => {\r\n    if (!this.state.pages.length) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Controls\r\n        currPage={this.state.currPage}\r\n        totalPages={this.state.pages.length}\r\n        onChange={this.pageChange}\r\n      />\r\n    );\r\n  };\r\n\r\n  render = () => (\r\n    <Fragment>\r\n      {this.props.controlsPos === \"top\" ? this.controls() : null}\r\n\r\n      {this.props.children({\r\n        displayItems: this.state.displayItems\r\n      })}\r\n      {this.props.controlsPos === \"bottom\" ? this.controls() : null}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nWithPagination.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  pageSize: PropTypes.number,\r\n  controlsPos: PropTypes.oneOf([\"top\", \"bottom\"])\r\n};\r\n\r\nWithPagination.defaultProps = {\r\n  controlsPos: \"bottom\",\r\n  pageSize: 20\r\n};\r\n\r\nexport default WithPagination;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Spinner from \"../Spinner\";\nimport resources from \"../../app/resources\";\nimport Pagination from \"../Pagination\";\n\nconst StyledList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nfunction List({ loading, selected, data, dataReceived }) {\n  if (loading) {\n    return (\n      <StyledList>\n        <Spinner />\n      </StyledList>\n    );\n  }\n\n  if (!selected || !resources[selected]) {\n    return (\n      <StyledList>\n        <h1>Welcome!</h1>\n        <p>Select a category to get started!</p>\n      </StyledList>\n    );\n  }\n\n  const CardComponent = resources[selected].cardComponent;\n\n  return (\n    <StyledList>\n      <Pagination options={data[selected]} controlsPos=\"bottom\" pageSize={20}>\n        {({ displayItems }) =>\n          displayItems.map(datum => (\n            <Link\n              key={datum.id}\n              to={`/${selected}/${resources[selected].slug}`}\n            >\n              <CardComponent {...datum} />\n            </Link>\n          ))\n        }\n      </Pagination>\n    </StyledList>\n  );\n}\n\nList.propTypes = {\n  selected: PropTypes.string,\n  data: PropTypes.object.isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default connect((state, props) => ({\n  selected: props.match.params.view,\n  data: state.dataReducer,\n  loading: state.viewReducer.loading\n}))(List);\n","import React from \"react\";\nimport { find } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport resources from \"../../app/resources\";\n\nconst StyledProfile = styled.ul`\n  profile-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nfunction Profile({ data, view, id }) {\n  const item = find(data[view], datum => datum.id === id);\n\n  const ProfileComponent = resources[view].profileComponent;\n\n  return (\n    <StyledProfile>\n      <ProfileComponent {...item} />\n    </StyledProfile>\n  );\n}\n\nProfile.propTypes = {\n  view: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nexport default withRouter(\n  connect((state, props) => ({\n    view: props.match.params.view,\n    id: props.match.params.id,\n    data: state.dataReducer\n  }))(Profile)\n);\n","import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport List from \"../List\";\nimport Profile from \"../Profile\";\nimport { Switch, Route } from \"react-router-dom\";\n\nconst StyledPageContents = styled.section`\n  padding: 40px;\n  background: (0, 0, 0, 0.05);\n`;\n\nfunction PageContents(props) {\n  return (\n    <StyledPageContents>\n      <Switch>\n        <Route path=\"/:view/:id\" component={Profile} />\n        <Route path=\"/:view?\" component={List} />\n      </Switch>\n    </StyledPageContents>\n  );\n}\n\nexport default withRouter(\n  connect((state, props) => ({\n    view: props.match.params.view\n  }))(PageContents)\n);\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { map } from \"lodash\";\nimport { get } from \"axios\";\nimport resources from \"../../app/resources\";\nimport { dataReceived, setLoading } from \"../../actions\";\n\nimport styled from \"styled-components\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport PageContents from \"../PageContents\";\n\nconst StyledApp = styled.section``;\n\nfunction App({ dataReceived, setLoading }) {\n  useEffect(() => {\n    setLoading(true);\n\n    Promise.all(\n      map(resources, async resource => {\n        const response = await get(resource.apiUrl);\n        if (response.status === 200 && response.data) {\n          return { data: response.data, slug: resource.slug };\n        }\n      })\n    ).then(results => {\n      results.forEach(result => dataReceived(result.data, result.slug));\n      setLoading(false);\n    });\n  }, [dataReceived, setLoading]);\n\n  return (\n    <StyledApp>\n      <Header tabs={map(resources, ({ title, slug }) => ({ title, slug }))} />\n\n      <PageContents />\n\n      <Footer />\n    </StyledApp>\n  );\n}\n\nApp.propTypes = {\n  dataReceived: PropTypes.func.isRequired,\n  setLoading: PropTypes.func.isRequired\n};\n\nexport default connect(\n  state => ({}),\n  dispatch => ({\n    dataReceived: (data, slug) => dispatch(dataReceived(data, slug)),\n    setLoading: val => dispatch(setLoading(val))\n  })\n)(App);\n","export const dataReceived = (data, slug) => ({\r\n  type: `DATA_RECEIVED`,\r\n  slug,\r\n  data\r\n});\r\n\r\nexport const setLoading = val => ({\r\n  type: `SET_LOADING`,\r\n  val\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\r\n  // background\r\n  backgroundColor: \"#F9F9FB\",\r\n\r\n  //borders\r\n  boxShadowColor: \"rgba(0, 0, 0, 0.1)\",\r\n  borderColor: \"#E3E5E7\",\r\n  borderRadius: \"4px\",\r\n\r\n  // font\r\n  fontColorPrimary: \"#606060\",\r\n  fontColorPrimaryLight: \"#A5A8A8\",\r\n  fontColorSecondary: \"#EB5424\",\r\n  linkColor: \"#0D96C6\",\r\n\r\n  // font styles\r\n  fontSizePrimary: \"20px\",\r\n  fontSizeSecondary: \"16px\"\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\n//reducers\r\nimport dataReducer from \"./data-reducer\";\r\nimport viewReducer from \"./view-reducer\";\r\n\r\nexport default combineReducers({\r\n  dataReducer,\r\n  viewReducer\r\n});\r\n","const initialState = () => ({\r\n  artists: [],\r\n  concerts: [],\r\n  venues: []\r\n});\r\n\r\nexport default (state = initialState(), action) => {\r\n  switch (action.type) {\r\n    case \"DATA_RECEIVED\":\r\n      return { ...state, [action.slug]: action.data };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = () => ({\r\n  loading: false\r\n});\r\n\r\nexport default (state = initialState(), action) => {\r\n  switch (action.type) {\r\n    case \"SET_LOADING\":\r\n      return { ...state, loading: action.val };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport appReducer from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default createStore(\r\n  appReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport ThemeProvider from \"./theme-provider\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport store from \"./store\";\n\nconst app = (\n  <ThemeProvider>\n    <Provider store={store}>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/:view?\" component={App} />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  </ThemeProvider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport variables from \"./styles/variables\";\r\n\r\nexport default props => (\r\n  <ThemeProvider theme={{ variables }}>{props.children}</ThemeProvider>\r\n);\r\n"],"sourceRoot":""}